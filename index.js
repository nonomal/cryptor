module.exports=function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=1)}([function(t,e){t.exports=require("crypto")},function(t,e,r){"use strict";r.r(e),r.d(e,"Cryptor",(function(){return a})),r.d(e,"encrypt",(function(){return u})),r.d(e,"decrypt",(function(){return i}));var n=r(0),o=r.n(n);function a(t){if(!t||"string"!=typeof t)throw new Error("Cryptor: secret must be a non-empty string");this.encrypt=t=>{i(t);const r=o.a.randomBytes(16),n=o.a.randomBytes(64),a=e(n),u=o.a.createCipheriv("aes-256-gcm",a,r),c=Buffer.concat([u.update(String(t),"utf8"),u.final()]),f=u.getAuthTag();return Buffer.concat([n,r,f,c]).toString("hex")},this.decrypt=t=>{i(t);const c=Buffer.from(String(t),"hex"),f=r(c),s=n(c),l=a(c),d=u(c),p=e(f),g=o.a.createDecipheriv("aes-256-gcm",p,s);return g.setAuthTag(l),g.update(d,"base64","utf8")+g.final("utf8")};const e=e=>o.a.pbkdf2Sync(t,e,1e5,32,"sha512"),r=t=>t.slice(0,64),n=t=>t.slice(64,80),a=t=>t.slice(80,96),u=t=>t.slice(96),i=t=>{if(!t)throw new Error("Cryptor: value must not be null or undefined");return!0}}const u=(t,e,r="base64")=>{const n=f(),a=s(),u=c(e,n),i=o.a.createCipheriv("aes-256-gcm",u,a),d=Buffer.concat([i.update(String(l(t)),"utf8"),i.final()]),p=i.getAuthTag();return Buffer.concat([n,a,p,d]).toString(r)},i=(t,e,r="base64")=>{const n=Buffer.from(String(t),r),a=n.slice(0,64).toString("base64"),u=n.slice(64,80).toString("base64"),i=n.slice(80,96),f=n.slice(96).toString("base64"),s=c(e,a),l=o.a.createDecipheriv("aes-256-gcm",s,u);l.setAuthTag(i);let p=l.update(f,"base64","utf8");try{p+=l.final("utf8")}catch(t){console.log("Warning: Failed to authenticate data")}return d(p)},c=(t,e)=>o.a.pbkdf2Sync(t,e,1e5,32,"sha512"),f=()=>o.a.randomBytes(64),s=()=>o.a.randomBytes(16),l=(t,e=16)=>{let r=t;const n=e-t.length%e,o=String.fromCharCode(n);for(let t=0;t<n;t++)r+=o;return r},d=t=>{let e=t;const r=t.charCodeAt(t.length-1);let n,o;for(n=t.length-2,o=t.length-r;n>=o;n--)if(t.charCodeAt(n)!==r)throw o=t.length,new Error("unpad(): found a padding byte of "+t.charCodeAt(n)+" instead of "+r+" at position "+n);return e=t.substring(0,o),e}}]);